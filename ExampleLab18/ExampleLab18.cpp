#include <stdio.h>
#include <locale.h>
#include <math.h>
						/*Вспомни пример из лабы 13-14*/
//в этой лабе ознакомлю вас с тем, как создавать свои собственные функции
//вам нужно написать следуюющую струру
// тип возвращаемого результата|название функции|(аргумменти функции) 
//         тело функции
// например: тип возвращаемой функции void(ничего не возвращает), 
//название insertSortArray, в аргументах сортируемый масив и его размер
//тип аргумента нужно писать каждый раз.

								/*Новая инфа*/
/*Функции можно писать не только перед мейном, но и после, чтобы писать 
	функцию после мейна, нужно использовать прототип
	Задание 1. напишу обычным способом, 2. используя прототип*/
// функции возращают значение, чтобы вернуть число нужно написать int/double, строку string/char*
// ничего не возвращать, void
//возращать, всмысле результат от работы функции или код насколько всё было успешно
//в () у нас параметры/аргументы функции, их пишем через запятую(если больше чем один), 
// перед ними пишем их тип, не важно как они назывались раньше, когда они придут в функцию 
//они будут называться так как назвали параметр
// например вызвали из мейна getCircleArea(x);
// в функции х станет Radius



double getCircleArea(double Radius) {
//функцию можно рассписать через переменные, но если там посчитать короткую формулу, то можно сделать так
// ретурн вернёт значение в то место где мы вызвали функцию
	return 3.14 * pow(Radius,2);
}
int main() {
	double r;
	printf("Hi there, we need one number, that will be radius of circle, for calculation its area\n");
	scanf_s("%lf", &r);
	//чтобы  не засорять память запишу площадь в радиус.
	r = getCircleArea(r);
	printf("Circle area is %lf", r);
}
// но вообще, вам никто не запрещает сделать вот так
/*
 int main() {
	double r;
	printf("Hi there, we need one number, that will be radius of circle, for calculation its area\n");
	scanf_s("%lf", &r);
	printf("Circle area is %lf", getCircleArea(r));
}
*/